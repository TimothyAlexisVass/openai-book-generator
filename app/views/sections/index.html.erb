<%= javascript_include_tag "sortable" %>
<%= javascript_include_tag "gpt" %>

<div class="mb-30">
  <h1 class="text-2xl font-bold text-blue-700 mb-4">Chapters of <%= @book.title %></h1>

  <%= form_tag handle_book_sections_path, method: :post do %>
    <div id="chapters-container">
      <!-- Existing chapters -->
      <% @chapters.each do |chapter| %>
        <h2 id="chapter-<%= chapter.number %>-title" class="text-xl font-bold mt-4"><%= "#{chapter.number}. #{chapter.title}" %></h2>
        <div id="chapter-<%= chapter.number %>-sections-container">
          <% chapter.sections.each do |section| %>
            <div class="section-field hover:bg-gray-50">
              <%= hidden_field_tag 'sections[][id]', section.id %>
              <%= hidden_field_tag 'sections[][chapter_id]', chapter.id %>
              <%= number_field_tag "sections[][number]", section.number, class: "sortable-handle w-[60px] detail-number appearance-none bg-transparent text-center", readonly: true %></span><%= text_field_tag 'sections[][title]', section.title, class: 'section-title-input w-[60vw]', oninput: "showSaveModal()" %><button type="button" class="bg-blue-700 hover:bg-blue-500 inline-block transition-all duration-500 text-white font-bold py-2 px-4 ml-2 my-2 rounded remove-section" onclick="remove()">Remove</button>
            </div>
          <% end %>
        </div>
        <input type="number" id="suggested-amount-<%= chapter.number %>" class="w-[65px]" min="1" max="20" value="4">
        <button type="button" id="suggest-sections-<%= chapter.number %>" class="bg-blue-700 hover:bg-blue-500 inline-block transition-all duration-500 text-white font-bold py-2 px-4 ml-2 my-2 rounded">
          Suggest sections
          <span id="suggest-sections-<%= chapter.number %>-loader" class="hidden ml-2 inline-block"><i class="loader"></i></span>
        </button>
        <button type="button" id="add-section-<%= chapter.number %>" class="bg-blue-700 hover:bg-blue-500 inline-block transition-all duration-500 text-white font-bold py-2 px-4 ml-2 my-2 rounded">Add section</button>
      <% end %>
    </div>
  <% end %>

  <div id="save-changes-modal" class="hidden fixed text-center transition-all duration-500 right-2 bg-white p-3 rounded shadow" style="bottom: -500px">
    <p class="mb-2">Save changes?</p>
    <button id="save-changes-button" class="bg-blue-700 hover:bg-blue-500 inline-block transition-all duration-500 text-white font-bold py-2 px-4 ml-2 my-2 rounded">
      Save
    </button>

  </div>
</div>

<script>
const bookTitle = "<%= raw @book.title %>";
const chapterTitles = <%= raw @chapters.map{|e| e.title}.to_json %>;

$(document).ready(function() {
  $('#save-changes-button').on('click', function() {
    $('#save-changes-modal').addClass('hidden');
    $('form').submit();
  });

  <% @chapters.each do |chapter| %>
    const chapterContainer<%= chapter.number %> = $('#chapter-<%= chapter.number %>-sections-container');

    const sortableSections<%= chapter.number %> = Sortable.create(chapterContainer<%= chapter.number %>[0], {
      handle: '.sortable-handle', // Specify the handle element for dragging
      animation: 150, // Set the animation speed (in milliseconds)
      onEnd: () => {
        updateOrder(chapterContainer<%= chapter.number %>); // Callback function to update the section order after reordering
        showSaveModal();
      },
    });

    $('#suggest-sections-<%= chapter.number %>').click(async () => {
      const suggestedAmount = $('#suggested-amount-<%= chapter.number %>').val()
      const suggestButton = $('#suggest-sections-<%= chapter.number %>');
      const suggestButtonLoader = $('#suggest-sections-<%= chapter.number %>-loader');

      suggestButton.prop('disabled', true);
      suggestButton.addClass('bg-gray-500 hover:bg-gray-500');
      suggestButtonLoader.removeClass('hidden');

      const systemMessage = 'Answer with only one json array, example: [ "First", "Second", ...], without any comments.';
      const userMessage = `We are writing a book titled ${bookTitle}. The book has the following chapters: ${chapterTitles.join(", ")}. Suggest ${suggestedAmount} section names, without number, for the chapter titled "<%= raw chapter.title %>"`;

      let suggestions = await getSuggestionsFromGPT(systemMessage, userMessage);

      suggestions.forEach(sectionText => {
        addSection(<%= chapter.id %>, chapterContainer<%= chapter.number %>, null, sectionText);
      });

      suggestButton.prop('disabled', false);
      suggestButton.removeClass('bg-gray-500 hover:bg-gray-500');
      suggestButtonLoader.addClass('hidden');

      showSaveModal();
    });

    $('#add-section-<%= chapter.number %>').click(() => {
      addSection(<%= chapter.id %>, chapterContainer<%= chapter.number %>, null);
    });

    updateOrder(chapterContainer<%= chapter.number %>);
  <% end %>
});

function addSection(chapter_id, container, sectionId, sectionText = null) {
  const sectionField = $('<div>').addClass('section-field');

  const sectionChapterIdInput = $('<input>')
    .attr('type', 'hidden')
    .attr('name', 'sections[][chapter_id]')
    .val(chapter_id);
  sectionField.append(sectionChapterIdInput);

  const sectionIdInput = $('<input>')
    .attr('type', 'hidden')
    .attr('name', 'sections[][id]')
    .val(sectionId || '');
  sectionField.append(sectionIdInput);

  const sectionNumber = $('<input>')
    .attr('type', 'number')
    .attr('readonly', true)
    .val(container.children().length + 1)
    .addClass('sortable-handle w-[60px] detail-number appearance-none bg-transparent text-center');
  sectionField.append(sectionNumber);

  const sectionInput = $('<input>')
    .attr('type', 'text')
    .attr('name', 'sections[][title]')
    .addClass('section-title-input w-[60vw]')
    .val(sectionText)
    .prop('required', true)
    .on('input', showSaveModal);

  const removeButton = $('<button>')
    .attr('type', 'button')
    .addClass('bg-blue-700 hover:bg-blue-500 inline-block transition-all duration-500 text-white font-bold py-2 px-4 ml-2 my-2 rounded remove-section')
    .text('Remove')
    .click(remove);

  sectionField.append(sectionInput);
  sectionField.append(removeButton);
  container.append(sectionField);
}

function updateOrder(container) {
  const sectionFields = container.find('.section-field');
  sectionFields.each((index, sectionField) => {
    const sectionNumberInput = $(sectionField).find('input[type="number"]');
    sectionNumberInput.val(index + 1);
  });
}

function remove() {
  const sectionField = $(this).closest('.section-field');
  sectionField.remove();
  updateOrder(sectionField.parent());
  showSaveModal();
}

function showSaveModal() {
  $('#save-changes-modal').removeClass('hidden');
  setTimeout(function() {
    $('#save-changes-modal').css('bottom', '2.25rem');
  }, 200);
  setTimeout(function() {
    $('#save-changes-modal').css('transition-duration', '2s');
    $('#save-changes-modal').css('bottom', '.50rem');
  }, 700);
}
</script>